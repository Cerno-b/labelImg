# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(935, 685)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.zoom_widget = QtWidgets.QSpinBox(self.centralwidget)
        self.zoom_widget.setObjectName("zoom_widget")
        self.verticalLayout_3.addWidget(self.zoom_widget)
        self.scroll_area = QtWidgets.QScrollArea(self.centralwidget)
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setObjectName("scroll_area")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 571, 598))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.canvas = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.canvas.setObjectName("canvas")
        self.verticalLayout_2.addWidget(self.canvas)
        self.scroll_area.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_3.addWidget(self.scroll_area)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 935, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dock = QtWidgets.QDockWidget(MainWindow)
        self.dock.setAccessibleName("")
        self.dock.setAccessibleDescription("")
        self.dock.setFeatures(QtWidgets.QDockWidget.DockWidgetMovable)
        self.dock.setObjectName("dock")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_list_container = QtWidgets.QWidget(self.dockWidgetContents)
        self.label_list_container.setObjectName("label_list_container")
        self.list_layout = QtWidgets.QVBoxLayout(self.label_list_container)
        self.list_layout.setContentsMargins(0, 0, 0, 0)
        self.list_layout.setObjectName("list_layout")
        self.edit_button = QtWidgets.QToolButton(self.label_list_container)
        self.edit_button.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.edit_button.setObjectName("edit_button")
        self.list_layout.addWidget(self.edit_button)
        self.difficult_checkbox = QtWidgets.QCheckBox(self.label_list_container)
        self.difficult_checkbox.setObjectName("difficult_checkbox")
        self.list_layout.addWidget(self.difficult_checkbox)
        self.use_default_label_container = QtWidgets.QWidget(self.label_list_container)
        self.use_default_label_container.setObjectName("use_default_label_container")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.use_default_label_container)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.use_default_label_checkbox = QtWidgets.QCheckBox(self.use_default_label_container)
        self.use_default_label_checkbox.setObjectName("use_default_label_checkbox")
        self.horizontalLayout_2.addWidget(self.use_default_label_checkbox)
        self.default_label_text_line = QtWidgets.QLineEdit(self.use_default_label_container)
        self.default_label_text_line.setObjectName("default_label_text_line")
        self.horizontalLayout_2.addWidget(self.default_label_text_line)
        self.list_layout.addWidget(self.use_default_label_container)
        self.combo_box = QtWidgets.QComboBox(self.label_list_container)
        self.combo_box.setObjectName("combo_box")
        self.list_layout.addWidget(self.combo_box)
        self.label_list = QtWidgets.QListWidget(self.label_list_container)
        self.label_list.setObjectName("label_list")
        self.list_layout.addWidget(self.label_list)
        self.gridLayout.addWidget(self.label_list_container, 0, 0, 1, 1)
        self.dock.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dock)
        self.file_dock = QtWidgets.QDockWidget(MainWindow)
        self.file_dock.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable)
        self.file_dock.setAllowedAreas(QtCore.Qt.AllDockWidgetAreas)
        self.file_dock.setObjectName("file_dock")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.dockWidgetContents_3)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.file_list_container = QtWidgets.QWidget(self.dockWidgetContents_3)
        self.file_list_container.setObjectName("file_list_container")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.file_list_container)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.file_list_widget = QtWidgets.QListWidget(self.file_list_container)
        self.file_list_widget.setObjectName("file_list_widget")
        self.verticalLayout.addWidget(self.file_list_widget)
        self.gridLayout_2.addWidget(self.file_list_container, 0, 0, 1, 1)
        self.file_dock.setWidget(self.dockWidgetContents_3)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.file_dock)
        self.tools = QtWidgets.QToolBar(MainWindow)
        self.tools.setOrientation(QtCore.Qt.Vertical)
        self.tools.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.tools.setObjectName("tools")
        MainWindow.addToolBar(QtCore.Qt.LeftToolBarArea, self.tools)
        self.action_open = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/open"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon)
        self.action_open.setObjectName("action_open")
        self.action_quit = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/quit"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_quit.setIcon(icon1)
        self.action_quit.setObjectName("action_quit")
        self.action_open_dir = QtWidgets.QAction(MainWindow)
        self.action_open_dir.setIcon(icon)
        self.action_open_dir.setObjectName("action_open_dir")
        self.action_copy_prev_bounding = QtWidgets.QAction(MainWindow)
        self.action_copy_prev_bounding.setObjectName("action_copy_prev_bounding")
        self.action_change_save_dir = QtWidgets.QAction(MainWindow)
        self.action_change_save_dir.setIcon(icon)
        self.action_change_save_dir.setObjectName("action_change_save_dir")
        self.action_open_annotation = QtWidgets.QAction(MainWindow)
        self.action_open_annotation.setIcon(icon)
        self.action_open_annotation.setObjectName("action_open_annotation")
        self.action_open_next_image = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/next"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_next_image.setIcon(icon2)
        self.action_open_next_image.setObjectName("action_open_next_image")
        self.action_open_prev_image = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/prev"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_prev_image.setIcon(icon3)
        self.action_open_prev_image.setObjectName("action_open_prev_image")
        self.action_verify = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/verify"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_verify.setIcon(icon4)
        self.action_verify.setObjectName("action_verify")
        self.action_save = QtWidgets.QAction(MainWindow)
        self.action_save.setEnabled(False)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/save"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon5)
        self.action_save.setObjectName("action_save")
        self.action_save_format = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/format_voc"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_format.setIcon(icon6)
        self.action_save_format.setObjectName("action_save_format")
        self.action_save_as = QtWidgets.QAction(MainWindow)
        self.action_save_as.setEnabled(False)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/save-as"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_as.setIcon(icon7)
        self.action_save_as.setObjectName("action_save_as")
        self.action_close = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/close"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_close.setIcon(icon8)
        self.action_close.setObjectName("action_close")
        self.action_delete_image = QtWidgets.QAction(MainWindow)
        self.action_delete_image.setIcon(icon8)
        self.action_delete_image.setObjectName("action_delete_image")
        self.action_reset_all = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/resetall"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_reset_all.setIcon(icon9)
        self.action_reset_all.setObjectName("action_reset_all")
        self.action_color1 = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/color_line"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_color1.setIcon(icon10)
        self.action_color1.setObjectName("action_color1")
        self.action_create_mode = QtWidgets.QAction(MainWindow)
        self.action_create_mode.setEnabled(False)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/new"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_create_mode.setIcon(icon11)
        self.action_create_mode.setObjectName("action_create_mode")
        self.action_edit_mode = QtWidgets.QAction(MainWindow)
        self.action_edit_mode.setEnabled(False)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/edit"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_edit_mode.setIcon(icon12)
        self.action_edit_mode.setObjectName("action_edit_mode")
        self.action_create = QtWidgets.QAction(MainWindow)
        self.action_create.setEnabled(False)
        self.action_create.setIcon(icon11)
        self.action_create.setObjectName("action_create")
        self.action_delete = QtWidgets.QAction(MainWindow)
        self.action_delete.setEnabled(False)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/delete"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_delete.setIcon(icon13)
        self.action_delete.setObjectName("action_delete")
        self.action_copy = QtWidgets.QAction(MainWindow)
        self.action_copy.setEnabled(False)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/copy"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_copy.setIcon(icon14)
        self.action_copy.setObjectName("action_copy")
        self.action_advanced_mode = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/expert"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_advanced_mode.setIcon(icon15)
        self.action_advanced_mode.setObjectName("action_advanced_mode")
        self.action_hide_all = QtWidgets.QAction(MainWindow)
        self.action_hide_all.setEnabled(False)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/hide"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_hide_all.setIcon(icon16)
        self.action_hide_all.setObjectName("action_hide_all")
        self.action_show_all = QtWidgets.QAction(MainWindow)
        self.action_show_all.setIcon(icon16)
        self.action_show_all.setObjectName("action_show_all")
        self.action_help = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/help"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_help.setIcon(icon17)
        self.action_help.setObjectName("action_help")
        self.menuFile.addAction(self.action_open)
        self.menuFile.addAction(self.action_open_dir)
        self.menuFile.addAction(self.action_copy_prev_bounding)
        self.menuFile.addAction(self.action_change_save_dir)
        self.menuFile.addAction(self.action_open_annotation)
        self.menuFile.addAction(self.action_save)
        self.menuFile.addAction(self.action_save_format)
        self.menuFile.addAction(self.action_save_as)
        self.menuFile.addAction(self.action_close)
        self.menuFile.addAction(self.action_reset_all)
        self.menuFile.addAction(self.action_delete_image)
        self.menuFile.addAction(self.action_quit)
        self.menuEdit.addAction(self.action_create)
        self.menuEdit.addAction(self.action_copy)
        self.menuEdit.addAction(self.action_delete)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.action_color1)
        self.menuView.addAction(self.action_advanced_mode)
        self.menuView.addSeparator()
        self.menuView.addAction(self.action_hide_all)
        self.menuView.addAction(self.action_show_all)
        self.menuHelp.addAction(self.action_help)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.tools.addAction(self.action_open)
        self.tools.addAction(self.action_open_dir)
        self.tools.addAction(self.action_change_save_dir)
        self.tools.addAction(self.action_open_next_image)
        self.tools.addAction(self.action_open_prev_image)
        self.tools.addAction(self.action_verify)
        self.tools.addAction(self.action_save)
        self.tools.addAction(self.action_save_format)
        self.tools.addSeparator()
        self.tools.addAction(self.action_create_mode)
        self.tools.addAction(self.action_copy)
        self.tools.addAction(self.action_delete)
        self.tools.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.dock.setWindowTitle(_translate("MainWindow", "Box Labels"))
        self.edit_button.setText(_translate("MainWindow", "..."))
        self.difficult_checkbox.setText(_translate("MainWindow", "difficult"))
        self.use_default_label_checkbox.setText(_translate("MainWindow", "Use default label"))
        self.file_dock.setWindowTitle(_translate("MainWindow", "File List"))
        self.tools.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action_open.setText(_translate("MainWindow", "Open"))
        self.action_open.setToolTip(_translate("MainWindow", "Open image or label file"))
        self.action_open.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_quit.setText(_translate("MainWindow", "Quit"))
        self.action_quit.setToolTip(_translate("MainWindow", "Quit application"))
        self.action_quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_open_dir.setText(_translate("MainWindow", "Open Dir"))
        self.action_open_dir.setToolTip(_translate("MainWindow", "Open Dir"))
        self.action_open_dir.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.action_copy_prev_bounding.setText(_translate("MainWindow", "Copy previous Bounding Boxes in the current image "))
        self.action_copy_prev_bounding.setToolTip(_translate("MainWindow", "Copy previous Bounding Boxes in the current image "))
        self.action_copy_prev_bounding.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.action_change_save_dir.setText(_translate("MainWindow", "Change Save Dir"))
        self.action_change_save_dir.setToolTip(_translate("MainWindow", "Change default saved Annotation dir"))
        self.action_change_save_dir.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.action_open_annotation.setText(_translate("MainWindow", "Open Annotation"))
        self.action_open_annotation.setToolTip(_translate("MainWindow", "Open an annotation file"))
        self.action_open_annotation.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.action_open_next_image.setText(_translate("MainWindow", "Next Image"))
        self.action_open_next_image.setToolTip(_translate("MainWindow", "Open the next Image"))
        self.action_open_next_image.setShortcut(_translate("MainWindow", "D"))
        self.action_open_prev_image.setText(_translate("MainWindow", "Prev Image"))
        self.action_open_prev_image.setToolTip(_translate("MainWindow", "Open the previous Image"))
        self.action_open_prev_image.setShortcut(_translate("MainWindow", "A"))
        self.action_verify.setText(_translate("MainWindow", "Verify Image"))
        self.action_verify.setToolTip(_translate("MainWindow", "Verify Image"))
        self.action_verify.setShortcut(_translate("MainWindow", "Space"))
        self.action_save.setText(_translate("MainWindow", "Save"))
        self.action_save.setToolTip(_translate("MainWindow", "Save the labels to a file"))
        self.action_save_format.setText(_translate("MainWindow", "&PascalVOC"))
        self.action_save_format.setToolTip(_translate("MainWindow", "Change save format"))
        self.action_save_format.setShortcut(_translate("MainWindow", "Ctrl++"))
        self.action_save_as.setText(_translate("MainWindow", "Save As"))
        self.action_save_as.setToolTip(_translate("MainWindow", "Save the labels to a different file"))
        self.action_save_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_close.setText(_translate("MainWindow", "Close"))
        self.action_close.setToolTip(_translate("MainWindow", "Close the current file"))
        self.action_close.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.action_delete_image.setText(_translate("MainWindow", "Delete current image"))
        self.action_delete_image.setToolTip(_translate("MainWindow", "Delete the current image"))
        self.action_delete_image.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.action_reset_all.setText(_translate("MainWindow", "Reset All"))
        self.action_reset_all.setToolTip(_translate("MainWindow", "Reset All"))
        self.action_color1.setText(_translate("MainWindow", "Box Line Color"))
        self.action_color1.setToolTip(_translate("MainWindow", "Choose Box line color"))
        self.action_color1.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.action_create_mode.setText(_translate("MainWindow", "Create RectBox"))
        self.action_create_mode.setToolTip(_translate("MainWindow", "Draw a new box"))
        self.action_create_mode.setShortcut(_translate("MainWindow", "W"))
        self.action_edit_mode.setText(_translate("MainWindow", "&Edit\\nRectBox"))
        self.action_edit_mode.setToolTip(_translate("MainWindow", "Move and edit Boxes"))
        self.action_edit_mode.setShortcut(_translate("MainWindow", "Ctrl+J"))
        self.action_create.setText(_translate("MainWindow", "Create RectBox"))
        self.action_create.setToolTip(_translate("MainWindow", "Draw a new box"))
        self.action_create.setShortcut(_translate("MainWindow", "W"))
        self.action_delete.setText(_translate("MainWindow", "Delete RectBox"))
        self.action_delete.setToolTip(_translate("MainWindow", "Remove the box"))
        self.action_delete.setShortcut(_translate("MainWindow", "Del"))
        self.action_copy.setText(_translate("MainWindow", "Duplicate RectBox"))
        self.action_copy.setToolTip(_translate("MainWindow", "Create a duplicate of the selected box"))
        self.action_copy.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.action_advanced_mode.setText(_translate("MainWindow", "Advanced Mode"))
        self.action_advanced_mode.setToolTip(_translate("MainWindow", "Swtich to advanced mode"))
        self.action_advanced_mode.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.action_hide_all.setText(_translate("MainWindow", "&Hide\\nRectBox"))
        self.action_hide_all.setToolTip(_translate("MainWindow", "Hide all bounding boxes"))
        self.action_hide_all.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.action_show_all.setText(_translate("MainWindow", "&Show\\nRectBox"))
        self.action_show_all.setToolTip(_translate("MainWindow", "Show all bounding boxes"))
        self.action_show_all.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.action_help.setText(_translate("MainWindow", "Tutorial"))
        self.action_help.setToolTip(_translate("MainWindow", "Show demo"))
import resources_rc
